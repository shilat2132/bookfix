{"version":3,"file":"static/js/855.dacd1602.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/warning/warning.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{\n    ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","\"use client\";\n\nimport * as React from 'react';\n\n// TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", {\n    ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  reverse = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n  const input = /*#__PURE__*/_jsx(FormCheckInput, {\n    ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, reverse && `${bsPrefix}-reverse`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import * as React from 'react';\n\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\nexport { map, forEach, hasChildOfType };","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormFloating = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nFormFloating.displayName = 'FormFloating';\nexport default FormFloating;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, {\n      ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", {\n    ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", {\n    ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, {\n  ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, {\n  ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["Col","React","props","ref","className","colProps","as","Component","bsPrefix","spans","_ref","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","classes","forEach","brkPoint","propValue","span","offset","order","infix","concat","push","classNames","useCol","_jsx","length","displayName","propTypes","type","PropTypes","tooltip","Feedback","FormCheckInput","id","isValid","isInvalid","controlId","useContext","FormContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","reverse","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","toArray","some","child","hasChildOfType","input","Provider","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormFloating","FormGroup","context","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","validated","Form","Group","Control","Floating","Check","Text","Range","Select","warning","module","exports"],"sourceRoot":""}