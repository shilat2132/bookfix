{"version":3,"file":"static/js/731.d23c66c3.chunk.js","mappings":"0LAgBO,SAASA,EAAmBC,GAAoB,IAAnB,QAACC,EAAO,OAAEC,GAAOF,EACjD,MAAMG,EAVV,SAAsBC,GAAY,IAAX,QAACH,GAAQG,EAC5BC,QAAQC,IAAIC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,IACZ,MACMC,EADM,IAAIC,IAAIR,EAAQS,KAAKC,aACZC,IAAI,YAEzB,OADAP,QAAQC,IAAIC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYM,eACpBL,GAAaA,IAAaD,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYO,mBACnC,IAD+D,GAE1E,CAGuBC,CAAc,CAACd,YAElC,GADAI,QAAQC,IAAIH,GACK,MAAdA,EAAmB,CAClB,MAAMa,EAAad,EAAOc,WAC1B,MAAkB,UAAfA,GAAwC,YAAdA,GAClBC,EAAAA,EAAAA,IAAU,WAEVA,EAAAA,EAAAA,IAAU,IAAGD,IAE5B,CAEA,OAAO,IACX,CAEAE,eAAeC,EAAYC,GAAoB,IAAnB,OAAClB,EAAM,QAAED,GAAQmB,EACzC,MAAMJ,EAAad,EAAOc,WAC1B,GAAkB,UAAfA,GAAwC,YAAdA,EACzB,OAAOC,EAAAA,EAAAA,IAAU,UAErB,IAAII,EAAU,QAAOL,IACrB,MAAMN,EAAM,IAAID,IAAIR,EAAQS,KAAKC,aACjC,GAAGD,EAAIY,KAAM,EAAE,CACXD,GAAQ,IACR,IAAIE,EAAE,EACN,IAAK,MAAMC,KAAOd,EAAIe,OACfF,EAAE,IAAGF,GAAQ,KAChBA,GAAU,GAAEG,KAAOd,EAAIE,IAAIY,KAC3BD,GAER,CACA,MAAMG,QAAiBC,MAAMN,GACvBO,QAAqBF,EAASG,OAEpC,IAAIH,EAASI,GACT,MAAMD,EAAAA,EAAAA,IAAK,CAACE,QAASH,EAAaG,SAAU,CAACC,OAAQN,EAASM,SAGlE,OAAOJ,EAAaK,IAExB,CAEO,SAASC,EAAWC,GAAoB,IAAnB,OAACjC,EAAM,QAAED,GAAQkC,EACzC,OAAOC,EAAAA,EAAAA,IAAM,CAACC,UAAWlB,EAAa,CAACjB,SAAQD,aACnD,CAGAiB,eAAeoB,EAAQC,GAAW,IAAV,OAACrC,GAAOqC,EAC5B,MAAMb,QAAiBC,MAAO,QAAOzB,EAAOc,cAAcd,EAAOsC,MAC3DZ,QAAqBF,EAASG,OACpC,IAAIH,EAASI,GACT,MAAMD,EAAAA,EAAAA,IAAK,CAACE,QAASH,EAAaG,SAAU,CAACC,OAAQN,EAASM,SAGlE,OAAOJ,CACX,CAEO,SAASa,EAAUC,GAAW,IAAV,OAACxC,GAAOwC,EAC/B,OAAON,EAAAA,EAAAA,IAAM,CAACO,SAAUL,EAAS,CAACpC,YACtC,C","sources":["utils/loaders.jsx"],"sourcesContent":["import { defer, json, redirect } from \"react-router-dom\";\r\n\r\n\r\n//PROTECT ROUTES\r\n/**compares the passwoed in the url with the onw saved in the config file\r\n * @return 200 in case of success and 401 for not authorized\r\n */\r\nfunction protectRoutes({request}){\r\n    console.log(process.env)\r\n    const url = new URL(request.url).searchParams\r\n    const password = url.get(\"password\")\r\n    console.log(process.env.REACT_APP_API)\r\n    if(!password || (password !== process.env.REACT_APP_PASSWORD)) return 401\r\n    return 200\r\n}\r\n\r\nexport function protectRoutesLoader({request, params}){\r\n    const authStatus = protectRoutes({request})\r\n    console.log(authStatus)\r\n    if(authStatus !==200) {\r\n        const collection = params.collection\r\n        if(collection !== \"books\" && collection!== \"stories\"){\r\n            return redirect (\"/books\")\r\n        }else{\r\n            return redirect(`/${collection}`)\r\n        }\r\n    }\r\n    \r\n    return null\r\n}\r\n\r\nasync function loadAllItems({params, request}){\r\n    const collection = params.collection\r\n    if(collection !== \"books\" && collection!== \"stories\"){\r\n        return redirect (\"/books\")\r\n    }\r\n    let apiUrl = `/api/${collection}`\r\n    const url = new URL(request.url).searchParams\r\n    if(url.size >0){\r\n        apiUrl+=\"?\"\r\n        let i=0\r\n        for (const key of url.keys()) {\r\n            if(i>0) apiUrl+=\"&\"\r\n            apiUrl+= `${key}=${url.get(key)}`\r\n            i++\r\n          }\r\n    }\r\n    const response = await fetch(apiUrl)\r\n    const responseData = await response.json()\r\n\r\n    if(!response.ok){\r\n        throw json({message: responseData.message}, {status: response.status})\r\n    }\r\n\r\n    return responseData.docs\r\n\r\n}\r\n\r\nexport function itemsLoader({params, request}){\r\n    return defer({itemsData: loadAllItems({params, request})})\r\n}\r\n\r\n\r\nasync function loadItem({params}){\r\n    const response = await fetch(`/api/${params.collection}/${params.id}`)\r\n    const responseData = await response.json()\r\n    if(!response.ok){\r\n        throw json({message: responseData.message}, {status: response.status})\r\n    }\r\n\r\n    return responseData\r\n}\r\n\r\nexport function itemLoader({params}){\r\n    return defer({itemData: loadItem({params})})\r\n}\r\n"],"names":["protectRoutesLoader","_ref2","request","params","authStatus","_ref","console","log","process","password","URL","url","searchParams","get","REACT_APP_API","REACT_APP_PASSWORD","protectRoutes","collection","redirect","async","loadAllItems","_ref3","apiUrl","size","i","key","keys","response","fetch","responseData","json","ok","message","status","docs","itemsLoader","_ref4","defer","itemsData","loadItem","_ref5","id","itemLoader","_ref6","itemData"],"sourceRoot":""}